- name: Install packages # noqa: package-latest
  ansible.builtin.package:
    name:
      - kibana
    state: latest
  become: true

- name: Reset kibana user password
  ansible.builtin.shell:
    set -o pipefail

    /usr/share/elasticsearch/bin/elasticsearch-reset-password --user kibana_system --silent --batch
  register: kibana_pwd
  changed_when: kibana_pwd.rc == 0
  failed_when: kibana_pwd.rc != 0
  become: true
  args:
    executable: /bin/bash

- name: Save kibana user password to a file
  ansible.builtin.shell:
    echo "{{ kibana_pwd.stdout }}" > /root/kibana_pwd.txt
  register: kibana_pwd_file
  changed_when: kibana_pwd_file.rc == 0
  become: true
  args:
    executable: /bin/bash

- name: Save kibana user password locally
  ansible.builtin.fetch:
    src: /root/kibana_pwd.txt
    dest: "{{ role_path }}/files/kibana_system_pwd.txt"
    mode: "0600"
    flat: true
  become: true

- name: Remove kibana user file
  ansible.builtin.file:
    path: /root/kibana_pwd.txt
    state: absent
  become: true

- name: Create certificate directory
  ansible.builtin.file:
    path: /etc/kibana/certs
    state: directory
    owner: "root"
    group: "kibana"
    mode: "0750"
  become: true

- name: Copy elasticsearch CA certificate
  ansible.builtin.copy:
    src: /etc/elasticsearch/certs/http_ca.crt
    dest: /etc/kibana/certs/http_ca.crt
    remote_src: true
    owner: "root"
    group: "kibana"
    mode: "0440"
  become: true

- name: Get node external IP
  ansible.builtin.set_fact:
    kibana_ip: "{{ ansible_facts['all_ipv4_addresses'] | select('regex', '^192.168.80.[0-9]{1,3}$') | first }}"

- name: Update kibana configuration
  ansible.builtin.replace:
    path: /etc/kibana/kibana.yml
    regexp: "{{ item.regex }}"
    replace: "{{ item.replace }}"
  loop:
    - { regex: '#(\s+)?server.port:.+', replace: 'server.port: 5601' }
    - { regex: '#(\s+)?server.host:.+', replace: "server.host: \"{{ kibana_ip }}\"" }
    - { regex: '#(\s+)?server.publicBaseUrl:.+', replace: "server.publicBaseUrl: \"http://{{ kibana_ip }}:5601\"" }
    - { regex: '#(\s+)?server.name:.+', replace: 'server.name: local-kibana' }
    - { regex: '#(\s+)?elasticsearch.hosts:.+', replace: 'elasticsearch.hosts: ["https://localhost:9200"]' }
    - { regex: '#(\s+)?elasticsearch.username:.+', replace: 'elasticsearch.username: "kibana_system"' }
    - { regex: '#(\s+)?elasticsearch.password:.+', replace: "elasticsearch.password: \"{{ kibana_pwd.stdout }}\"" }
    - { regex: '#(\s+)?elasticsearch.ssl.certificateAuthorities:.+', replace: 'elasticsearch.ssl.certificateAuthorities: [ "/etc/kibana/certs/http_ca.crt" ]' }
  become: true

- name: Set kibana memory limitation
  ansible.builtin.replace:
    path: /etc/kibana/node.options
    regexp: '[#]+(\s+)?--max-old-space-size=.+'
    replace: "--max-old-space-size=512"
  become: true

- name: Start kibana service
  ansible.builtin.systemd:
    name: kibana
    state: started
    enabled: true
  become: true
